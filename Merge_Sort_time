#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void Intercala(int p, int q, int r, int v[]) {
    int i, j, k, *w;
    w = malloc((r - p) * sizeof(int));
    i = p; j = q; k = 0;
    while (i < q && j < r) {
        if (v[i] <= v[j]) w[k++] = v[i++];
        else w[k++] = v[j++];
    }
    while (i < q) w[k++] = v[i++];
    while (j < r) w[k++] = v[j++];
    for (i = p; i < r; i++) v[i] = w[i - p];
    free(w);
}

void Mergesort(int p, int r, int v[]) {
    if (p < r - 1) {
        int q = (p + r) / 2;
        Mergesort(p, q, v);
        Mergesort(q, r, v);
        Intercala(p, q, r, v);
    }
}

int main() {
    int tam;
    clock_t inicio, fim;
    double tempo_execucao;

    printf("Digite o tamanho do vetor: ");
    scanf("%d", &tam);

    int vet[tam];
    srand(time(NULL));

    for (int i = 0; i < tam; i++) {
        vet[i] = (rand() % 100) + 1; // Valores entre 1 e 100
    }

    inicio = clock();
    Mergesort(0, tam, vet);
    fim = clock();
    tempo_execucao = (double)(fim - inicio) / CLOCKS_PER_SEC;

    printf("Tamanho do vetor = %d\n", tam);
    printf("Tempo para ordenar = %.6f segundos\n", tempo_execucao);

    return 0;
}
